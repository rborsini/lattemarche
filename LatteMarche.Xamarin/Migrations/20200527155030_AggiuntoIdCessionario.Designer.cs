// <auto-generated />
using System;
using LatteMarche.Xamarin.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LatteMarche.Xamarin.Migrations
{
    [DbContext(typeof(LatteMarcheDbContext))]
    [Migration("20200527155030_AggiuntoIdCessionario")]
    partial class AggiuntoIdCessionario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Acquirente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comune")
                        .HasColumnType("TEXT");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("TEXT");

                    b.Property<string>("P_IVA")
                        .HasColumnType("TEXT");

                    b.Property<string>("Provincia")
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Acquirenti");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Allevamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comune")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdAcquirenteDefault")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAllevamento")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdDestinatarioDefault")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdTemplateGiro")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdTipoLatte")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitudine")
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitudine")
                        .HasColumnType("REAL");

                    b.Property<string>("P_IVA")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priorita")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Provincia")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantita_Max")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantita_Min")
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Temperatura_Max")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Temperatura_Min")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdTemplateGiro");

                    b.HasIndex("IdTipoLatte");

                    b.ToTable("Allevamenti");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.AutoCisterna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdTrasportatore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modello")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumScomparti")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Portata")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Targa")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdTrasportatore")
                        .IsUnique();

                    b.ToTable("AutoCisterne");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Cessionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comune")
                        .HasColumnType("TEXT");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("TEXT");

                    b.Property<string>("P_IVA")
                        .HasColumnType("TEXT");

                    b.Property<string>("Provincia")
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cessionari");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Destinatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comune")
                        .HasColumnType("TEXT");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("TEXT");

                    b.Property<string>("P_IVA")
                        .HasColumnType("TEXT");

                    b.Property<string>("Provincia")
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Destinatari");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Giro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodiceLotto")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataConsegna")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUpload")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdTemplateGiro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titolo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Giri");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Prelievo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataConsegna")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataPrelievo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaMungitura")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdAcquirente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdAllevamento")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdCessionario")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdDestinatario")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdGiro")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumeroMungiture")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Quantita_kg")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantita_lt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scomparto")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titolo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdGiro");

                    b.ToTable("Prelievi");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Sincronizzazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sincronizzazioni");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Stampante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MacAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Selezionata")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stampanti");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.TemplateGiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdTrasportatore")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdTrasportatore");

                    b.ToTable("TemplateGiri");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.TipoLatte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FattoreConversione")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipiLatte");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Trasportatore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("TEXT");

                    b.Property<string>("P_IVA")
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trasportatori");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Allevamento", b =>
                {
                    b.HasOne("LatteMarche.Xamarin.Db.Models.TemplateGiro", "TemplateGiro")
                        .WithMany("Allevamenti")
                        .HasForeignKey("IdTemplateGiro");

                    b.HasOne("LatteMarche.Xamarin.Db.Models.TipoLatte", "TipoLatte")
                        .WithMany()
                        .HasForeignKey("IdTipoLatte");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.AutoCisterna", b =>
                {
                    b.HasOne("LatteMarche.Xamarin.Db.Models.Trasportatore", "Trasportatore")
                        .WithOne("AutoCisterna")
                        .HasForeignKey("LatteMarche.Xamarin.Db.Models.AutoCisterna", "IdTrasportatore");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.Prelievo", b =>
                {
                    b.HasOne("LatteMarche.Xamarin.Db.Models.Giro", "Giro")
                        .WithMany("Prelievi")
                        .HasForeignKey("IdGiro");
                });

            modelBuilder.Entity("LatteMarche.Xamarin.Db.Models.TemplateGiro", b =>
                {
                    b.HasOne("LatteMarche.Xamarin.Db.Models.Trasportatore", "Trasportatore")
                        .WithMany()
                        .HasForeignKey("IdTrasportatore");
                });
#pragma warning restore 612, 618
        }
    }
}
